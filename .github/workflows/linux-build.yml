name: GCC Build Test

on:
  pull_request:
    branches:
      - '*'  # This will run the build and test jobs for pull requests to all branches

jobs:
  test-cpp:
    runs-on: ubuntu-latest
    env: 
      LD_LIBRARY_PATH: /opt/sensing-dev/lib:/opt/sensing-dev/lib/x86_64-linux-gnu
      SDK_VERSION: v24.05.02
    strategy:
        matrix:
          tutorial_file_name: [tutorial0_get_device_info, tutorial0_set_device_info, tutorial1_display, tutorial2_control_camera, tutorial3_getting_frame_count]
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
        with:
          submodules: recursive

      - name: Install sensing-dev SDK
        run: |
          dl_version=$(echo ${{ env.SDK_VERSION }} | cut -d'-' -f1)
          echo "$dl_version will be installed"
          mkdir setup_dir && cd setup_dir
          wget -O setup.sh https://github.com/Sensing-Dev/sensing-dev-installer/releases/download/${{ env.SDK_VERSION}}/setup.sh
          chmod +x ${GITHUB_WORKSPACE}/setup_dir/setup.sh
          sudo bash ${GITHUB_WORKSPACE}/setup_dir/setup.sh --install-opencv -v $dl_version

      - name: Build ${{ matrix.tutorial_file_name}}
        run: |
          cd cpp
          python_output=$(python ${GITHUB_WORKSPACE}/.github/get_compile_command.py src/${{ matrix.tutorial_file_name}}.cpp)
          echo "Python script output: $python_output"
          eval "$python_output"

      - name: Check if ${{ matrix.tutorial_file_name }} exists
        uses: andstor/file-existence-action@v3
        with:
          files: cpp/${{ matrix.tutorial_file_name}}
          fail: true
